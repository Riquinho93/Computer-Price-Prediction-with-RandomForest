# -*- coding: utf-8 -*-
"""Computer Price Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SXvhWOWan5OHPIt1_r-gGxuzXLhq_nqI
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd ..
from google.colab import drive
drive.mount("/content/gdrive")

# rename the path /content/gdrive/My\ Drive/ to /mydrive
!ln -s /content/gdrive/My\ Drive/ /mydrive
#!ls /mydrive

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

!ls /mydrive/Data_Science_Projects/Computer_Price_Prediction/data

path = "/mydrive/Data_Science_Projects/Computer_Price_Prediction/data/"

df = pd.read_csv(path + "ComputerPricesData.csv")
print(df.shape)
print(df.head())
print(df.describe())

"""##Summarize dataset:

- price: The Price of the computer

- speed: The speed

- hd: How much hard drive is present

- ram: How much ram is present in the computer

- screen: The screen size

- cd: Whether CD player is present or not

- multi: Are there multiple ports or not

- premium: If the computer premium quality

- ads: The ads value of the computer

- trend: The trend value of the computer
"""

df.info()

from sklearn import preprocessing

label_enconder = preprocessing.LabelEncoder()
df['cd'] = label_enconder.fit_transform(df['cd'])
df['multi'] = label_enconder.fit_transform(df['multi'])
df['premium'] = label_enconder.fit_transform(df['premium'])

df.head(10)

# correlation
corr = df.corr()

# heatmap
plt.figure(figsize=[16,6])
sns.heatmap(data= corr, annot=True)

!install pandas profilling
!pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip

from pandas_profiling import ProfileReport

profile = ProfileReport(df, title='Report - Pandas Profilling', html={'style': {'full_width': True}})
profile

X = df.drop(['price','speed'], axis=1)
y = df['price']
X

from sklearn.model_selection import train_test_split

X_train, X_test, y_train,y_test = train_test_split(X, y, test_size=0.10, random_state=15)

"""## Random Florest"""

from sklearn.ensemble import RandomForestRegressor

model = RandomForestRegressor()
model.fit(X_train, y_train)

"""## Evaluate the model"""

y_pred = model.predict(X_test)

from sklearn.metrics import r2_score

evaluate = r2_score(y_test, y_pred)
print("R2 Score: ", evaluate)

# Cross validation
from sklearn.model_selection import cross_val_score

accuracies = cross_val_score(model, X, y, cv=10)
print("Accuracy {:.2f} %".format(accuracies.mean()*100))

"""## Save dataset"""

df.to_csv('/mydrive/Data_Science_Projects/Computer_Price_Prediction/data/data.csv', index=False)

import joblib

joblib.dump(model, "model.pkl")